<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Плечи и лимиты Binance Futures</title>
  </head>
  <body>
    <div class="wrapper">
      <div class="material-tabs">
        <div class="tabbed-section__selector">
          <a class="tabbed-section__selector-tab-1 active" href="#">Futures (в USDT)</a>
          <a class="tabbed-section__selector-tab-2" href="#">Кварталки (в монетах)</a>
          <a class="tabbed-section__selector-tab-3" href="#">Все рынки</a>
          <span class="tabbed-section__highlighter"></span>
        </div>
      
      
        <div class="tabbed-section-1 visible">
           
          <table>
            <tr>
              <col width="50px" />
              <td ></td>
              
          <% leverages.forEach(function(token) { %>
            <td ><b><%=token.symbol%></b></td>
              <% })%>
          <% for (var leverage in brackets) { %>
                <tr>
                  <td class="sticky">
                    <b>x<%=leverage%></b>
                  </td>
                  <% leverages.forEach(function(token) { %>
                      <td><%=brackets[leverage][token.symbol]%></td>
                    <% })%>
                </tr>
            <% }%>
            </tr>
            </table>  

        </div>
        <div class="tabbed-section-2 hidden">
          <table>
            <tr>
              <col width="50px" />
              <td ></td>
              
              <% de_leverages.forEach(function(token) { %>
                <td ><b><%=token.pair%></b></td>
                  <% })%>
              <% for (var leverage in de_brackets) { %>
                    <tr>
                      <td class="sticky">
                        <b>x<%=leverage%></b>
                      </td>
                      <% de_leverages.forEach(function(token) { %>
                          <td><%=de_brackets[leverage][token.pair]%></td>
                        <% })%>
                    </tr>
                <% }%>
            </tr>
            </table> 
        
        </div> 
        <div class="tabbed-section-3 hidden">
          <div class="tokens-wrapper">
            <table class="tokens">
              <thead>
                <th>
                  Монета
                </th>

                <% for (var token of spot) { %>
                  <th>
                  <%=token%>
                  </th>
                  <% } %>
                <th>Фьючерсы</th>
                <th>Маржиналка</th>
              </thead>
              <tbody> 
            <% for (var ticker in all) { %>
            <tr>
              <th><%=ticker%></th>
              <% for (var token of spot) { %>
                <td>
                <% if(all[ticker].includes(token)) {%>
                  <div class="green"></div>
                <% }  else  { %>
                  <div class="red"></div>
                  <%  } %>
                  
              </td>
                <% } %>
                <td>
                  <% if(all[ticker].includes("FUTURES")) {%>
                    <div class="green"></div>
                  <% } else  { %>
                  <div class="red"></div>
                  <%  } %>
                </td>
                <td>
                  <% if(all[ticker].includes("MARGIN")) {%>
                    <div class="green"></div>
                  <% } else  { %>
                    <div class="red"></div>
                    <%  } %>
                </td>
            </tr>
            <% } %>
              </tbody>     </table>
            </div>
        </div>
      </div>
    
  
    </div>
    <center style="margin-top:15px">
    <input type="number" id="orderSize" placeholder="Введите размер ордера" style="width:200px">
    <button  onclick="calculate()">Посчитать</button></center>
    <br/>
    <textarea name="result" id="result"  ></textarea>

    <script>
      // TOGGLE SECTIONS
// querySelector, jQuery style
var $ = function (selector) {
  return document.querySelectorAll(selector);
};


// Define tabs, write down them classes  '.tabbed-section__selector-tab-3'
var tabs = [
  '.tabbed-section__selector-tab-1',
  '.tabbed-section__selector-tab-2',
  '.tabbed-section__selector-tab-3'
];

// Create the toggle function
var toggleTab = function(element) {
  var parent = element.parentNode;
  
  // Do things on click
  $(element)[0].addEventListener('click', function(){
    // Remove the active class on all tabs.
    // climbing up the DOM tree with `parentNode` and target 
    // the children ( the tabs ) with childNodes
    this.parentNode.childNodes[1].classList.remove('active');
    this.parentNode.childNodes[3].classList.remove('active');
    this.parentNode.childNodes[5].classList.remove('active');

    // Then, give `this` (the clicked tab), the active class
    this.classList.add('active');
    
    // Check if the clicked tab contains the class of the 1 or 2
    if(this.classList.contains('tabbed-section__selector-tab-1')) {
      // and change the classes, show the first content panel
      $('.tabbed-section-1')[0].classList.remove('hidden');
      $('.tabbed-section-1')[0].classList.add('visible');
      
      // Hide the second
      $('.tabbed-section-2')[0].classList.remove('visible');
      $('.tabbed-section-2')[0].classList.add('hidden');
      $('.tabbed-section-3')[0].classList.remove('visible');
      $('.tabbed-section-3')[0].classList.add('hidden');
    }

    if(this.classList.contains('tabbed-section__selector-tab-2')) {
      // and change the classes, show the second content panel
      $('.tabbed-section-2')[0].classList.remove('hidden');
      $('.tabbed-section-2')[0].classList.add('visible');
      // Hide the first
      $('.tabbed-section-1')[0].classList.remove('visible');
      $('.tabbed-section-1')[0].classList.add('hidden');
      $('.tabbed-section-3')[0].classList.remove('visible');
      $('.tabbed-section-3')[0].classList.add('hidden');
    }
    
    if(this.classList.contains('tabbed-section__selector-tab-3')) {
      // and change the classes, show the second content panel
      $('.tabbed-section-3')[0].classList.remove('hidden');
      $('.tabbed-section-3')[0].classList.add('visible');
      // Hide the first
      $('.tabbed-section-1')[0].classList.remove('visible');
      $('.tabbed-section-1')[0].classList.add('hidden');
      $('.tabbed-section-2')[0].classList.remove('visible');
      $('.tabbed-section-2')[0].classList.add('hidden');
    }
  });
};

// Then finally, iterates through all tabs, to activate the 
// tabs system.
for (var i = tabs.length - 1; i >= 0; i--) {
  toggleTab(tabs[i])
};

      function calculate(){
        let command ="";
        let leveragesGroups = {};
        const val  = document.querySelector('#orderSize').value
        let commands = {};
        let leverages = <%- JSON.stringify(leverages) %>;
        let brackets = <%- JSON.stringify(leverages) %>;
        for (const leverage of leverages) {
            const symbol = leverage.symbol;
            commands[symbol] = 0;
            for (const bracket of leverage.brackets) {
                if(bracket.notionalCap>=val && commands[symbol]<bracket.initialLeverage) commands[symbol] = bracket.initialLeverage
            }
            // for (const symbol in leverage) {
            //    if(leverage[symbol]) 
            // }
        }
     
        for (const token in commands) {
          if(!leveragesGroups[commands[token]]) leveragesGroups[commands[token]] = []
          leveragesGroups[commands[token]].push(token)
        }
        let resultCommand = "";
        for (const leverage in leveragesGroups) {
          resultCommand+=`Leverage ${leverage} ${leveragesGroups[leverage].join(',')}\n`;
        }
        document.querySelector("#result").value  = resultCommand;
      }
    </script>
      <style>
        @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@300;700&display=swap');
        html,body {
          margin: 0;
          background: rgb(24, 26, 32);font-family: 'Roboto', sans-serif;
          color:white;
          width: 100%;
          /* // overflow: hidden; */
        }
        /* .wrapper{
          max-width: 100%;
          overflow: auto;
        } */
        table.tokens {
          margin: 20px auto 0;
    max-width: 940px;
    width: 100%;
        }
        table.tokens td{
          position: relative;
        }
        table {
          margin-top: 10px;
  border-collapse: collapse;
          
} 
 
.tokens th {
  position: -webkit-sticky;
  position: sticky;
  top: 0;
  z-index: 23;
 
    background: black;
}
.tokens th:first-child{
  position: relative;
}
.tokens th[scope=row] {
  position: -webkit-sticky;
  position: sticky;
  left: 0;
  z-index: 1;
}
 
.material-tabs {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  padding:10px 3px;
  padding-top: 0;
  width: 100%;
  position: relative;
}
@media all and (max-width: 480px) {
  .material-tabs {
    max-width: 100%;
    left: 0;
  }
}

.visible {
  position: relative;
  opacity: 1;
  width: 100%;
  height: auto;
  float: left;
  transition: opacity 0.35s ease;
  z-index: 3;
}
.green{
  background: green;
    height: 100%;
    display: flex;
    position: absolute;
    width: 100%;
    left: 0;
    top: 0;
}
.red{
  background: red;
    height: 100%;
    display: flex;
    position: absolute;
    width: 100%;
    left: 0;
    top: 0;
}
.hidden {
  position: absolute;
  opacity: 0;
  z-index: 0;
  transition: opacity 0s ease;
}
.hidden img {
  display: none;
}

[class*=tabbed-section-] {
  float: left;
}
[class*=tabbed-section-] img {
  display: block;
  width: 80%;
  margin: auto 10%;
}

.tabbed-section__selector {
  position: relative;
  height: 32px;
  padding: 0;
  z-index: 10;
  margin: 0;
}
.tabbed-section__selector [class*=-tab-] {
  float: left;
  display: block;
  height: 32px;
  line-height: 32px;
  width: 160px;
  text-align: center;
  color:rgb(146, 146, 146);
  font-weight: bold;
  text-decoration: none;
  font-size: 14px;
}
.tabbed-section__selector [class*=-tab-].active {
  color: #fff;
}
.tabbed-section__selector a:first-child {
  border-top-left-radius: 2px;
}
.tabbed-section__selector a:last-of-type {
  border-top-right-radius: 2px;
}

.tabbed-section__highlighter {
  position: absolute;
  z-index: 10;
  bottom: 0;
  height: 2px;
  background: #fff;
  max-width: 160px;
  width: 100%;
  transform: translateX(0);
  display: block;
  left: 0;
  transition: transform 0.23s ease;
}

.tabbed-section__selector-tab-3.active ~ .tabbed-section__highlighter {
  transform: translateX(320px);
}

.tabbed-section__selector-tab-2.active ~ .tabbed-section__highlighter {
  transform: translateX(160px);
}

.tabbed-section__selector-tab-1.active ~ .tabbed-section__highlighter {
  transform: translateX(0);
}

.divider {
  background: rgba(0, 0, 0, 0.1);
  position: relative;
  display: block;
  float: left;
  width: 100%;
  height: 1px;
  margin: 8px 0;
  padding: 0;
  overflow: hidden;
}
#result{

  width: 95%;
  display: block;
  margin: 10px auto 0 auto;
  height: 260px;padding: 10px;
}
  .sticky {
    position: sticky;
  position: -webkit-sticky;
  left: 0;
  background: #569CA8;
  color: white;
  z-index: 1;
  width: 100px; /* How can I make this dynamic? */
  }
         th, td {
  border: 1px solid #ccc;
}
        table td{overflow: hidden;
          padding:5px;text-align: center;
        }
      </style>
  </body>
</html>